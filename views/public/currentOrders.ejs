<!-- include header -->
<%- include('./includes/header') %>

<style>
    .float-end {
        text-align: right;
    }

    input[type="radio"] {
        display: none;
    }

    label {
        font-size: 24px;
        cursor: pointer;
    }

    label:before {
        content: '\2605'; /* Unicode star character */
        color: #f7d63c; /* Star color */
    }

    input[type="radio"]:checked + label:before {
        color: #ffac00; /* Checked star color */
    }

</style>

    <section style="background-color: #eee;">
        <div class="container profile-section">
            <div class="row">
                <%-include("./includes/profileLeft") %>
                <div class="col-lg-8">
                    <div class="card mb-4 profile-right">
                        <div class="card-body">
                            <div class="row py-3">
                                <div class="col-sm-12">
                                    <h3 class="mb-3 float-start">Current Orders</h3>
                                    <a href="/order-history">
                                        <button type="button" class="btn btn-outline-secondary float-end mb-3">Order History</button>
                                    </a>
                                    
                                    <a href="/canceled-orders">
                                        <button type="button" class="btn btn-outline-danger float-end mb-3 mx-1">Canceled Orders</button>
                                    </a>
                                    <div class="float-end mx-4 pt-2">
                                        <div class="rounded-circle mx-1 float-start" style="width: 20px; height: 20px; background-color: #d3ea66;"> </div>
                                        <h6 class="fw-semibold mb-0 float-start mx-1">Pending Orders</h6>
                                    </div>
                                    
                                </div>
                                <hr>
                            </div>
                            <%  
                                let i = 1;
                                data.forEach((item)=>{
                            %>
                            
                            <div class="row py-1 text-light">
                                <div class="py-3 col-sm-12">
                                    <div class="text-dark border border-dark rounded p-2">
                                        <% if (item.status === 'prepared' || item.status === 'delivered') { %>
                                            <button type="button" class="btn btn-danger float-end m-1" disabled>Cancel Order</button>
                                        <% }else{ %>
                                        <button type="button" class="btn btn-danger float-end m-1" onclick="cancelOrder('<%= item._id %>')">Cancel Order</button>
                                        <% } %>
                                        <button type="button" class="btn btn-primary float-end m-1" data-bs-toggle="modal" data-bs-target="#reviewModal<%= i %>" <%= item.rated === false ? '' : 'disabled' %> >
                                            <%= item.rated === false ? 'Add Rating' : 'Rating Added' %>
                                        </button>

                                        <div class="modal fade" id="reviewModal<%= i %>" tabindex="-1" aria-labelledby="addressModalLabel" aria-hidden="true">
                                            <div class="modal-dialog">
                                                <div class="modal-content">
                                                    <div class="modal-header bg-secondary text-light">
                                                    <h5 class="modal-title" id="addressModalLabel">Add review</h5>
                                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                    </div>
                                                    <form id="rating" onsubmit="submitRatings(event)">
                                                        <input type="hidden" name="orderId" value="<%= item._id %>">
                                                        <div class="modal-body">
                                                            <% item.items.forEach((element, index) => { %>
                                                                <h6 class="mb-0 p-3">
                                                                    <span><%= element.carted[0].foodName %></span>
                                                                    <div class="float-end">
                                                                        <input type="radio" id="star1_<%= index %>" name="<%= element.item %>" value="1" />
                                                                        <label for="star1_<%= index %>"></label>
                                                                        <input type="radio" id="star2_<%= index %>" name="<%= element.item %>" value="2" />
                                                                        <label for="star2_<%= index %>"></label>
                                                                        <input type="radio" id="star3_<%= index %>" name="<%= element.item %>" value="3" />
                                                                        <label for="star3_<%= index %>"></label>
                                                                        <input type="radio" id="star4_<%= index %>" name="<%= element.item %>" value="4" />
                                                                        <label for="star4_<%= index %>"></label>
                                                                        <input type="radio" id="star5_<%= index %>" name="<%= element.item %>" value="5" />
                                                                        <label for="star5_<%= index %>"></label>
                                                                    </div>
                                                                </h6>
                                                            <% }) %>
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                            <button type="submit" class="btn btn-primary">Save changes</button>
                                                        </div>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>                 
                                        <p class="mb-0 px-3"><strong>Order Id :</strong> &nbsp;&nbsp;&nbsp; <%= item._id %></p>
                                        <p class="mb-0 px-3"><strong>Payment Method :</strong> &nbsp;&nbsp;&nbsp; <%= item.paymentMethod %></p>
                                        <p class="mb-0 px-3"><strong>Payment Status :</strong> &nbsp;&nbsp;&nbsp; <%= item.paymentStatus %></p>
                                        <p class="mb-0 px-3"><strong>Address :</strong> &nbsp;&nbsp;&nbsp; <%= item.address %></p>
                                        <p class="mb-0 px-3"><strong>Date :</strong> &nbsp;&nbsp;&nbsp; <%= item.time.toLocaleString("en-US", {day: "numeric", month: "short", year: "numeric"}) %></p>
                                        <p class="mb-0 px-3"><strong>Time :</strong> &nbsp;&nbsp;&nbsp; <%= item.time.toLocaleString("en-US", {hour: "numeric", minute: "numeric", second: "numeric", hour12: true}); %> </p>
                                        <hr class="py-1">
                                        <% item.items.forEach((element)=>{ %>
                                            <span class="mb-0 px-3"><b>Dish :</b> <%= element.carted[0].foodName %></span><span class="mb-0 px-3"><b>Qty :</b> <%= element.quantity %></span><span class="mb-0 p-3"><b>Price :</b> <%= element.total %></span>
                                            <hr>
                                        <% }) %>
                                        <br>
                                        <p class="mb-1 px-2 float-end"><strong>Discount Price :</strong> ₹ <%= item.discountedPrice ? item.discountedPrice : 'Nil' %></p>
                                        <p class="mb-1 px-2 float-end"><strong>Discount</span> :</strong> <%= item.discount ? item.discount+'%' : 'Nil' %></p>
                                        <p class="mb-1 px-2 float-end"><strong>Sub Total :</strong> ₹ <%= item.price ? item.price : 'Nil' %></p>
                                        <br>
                                        <br>
                                        <h5 class="mb-0 px-2 float-end">Wallet Amount : <span class="text-danger">₹ <%= item.walletAmount ? item.walletAmount : 'None' %></span></h5>
                                        <h5 class="mb-0 px-4 float-end">Total : <span class="text-danger">₹ <%= item.subTotal %></span></h5>
                                        <br>
                                    </div>
                                </div>
                            </div>
                            <% i++ }) %> 
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>



<script>
    async function submitRatings(event) {
        event.preventDefault(); 

        // Create a FormData object from the form
        const formData = new FormData(event.target); 
       
        let rating = {}
        // Iterate through each element in the form
        for (const [name, value] of formData) {
            rating[name] = value
        }
       
        try {
            const response = await fetch('/rate-order', {
                    method: "PUT",
                    headers: {
                    "Content-Type": "application/json",
                    },
                    body: JSON.stringify({rating}),
                });

                const result = await response.json()
                if(result.status === "success"){
                    Swal.fire(
                        'Rating Added!',
                        result.msg,
                        'success'
                        )
                    setTimeout(() => {
                        location.reload()
                    }, 800);
                }else{
                    Toastify({
                    text: result.msg,
                    className: "info",
                    style: {
                        background: "linear-gradient(to right, #ff0000, #dd2a7f)",
                    }
                    }).showToast();
                }
        } catch (error) {
            Toastify({
                text: 'Something went wrong',
                className: "info",
                style: {
                    background: "linear-gradient(to right, #ff0000, #dd2a7f)",
                }
            }).showToast();
        }
    }

    //-----------------------------------------------------------------------------------------

    
    function cancelOrder(orderId) {
        Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, Cancel it!'
        }).then(async (result) => {
            if (result.isConfirmed) {
                const data = { id:  orderId};
                try {
                const response = await fetch("/cancel-order", {
                    method: "DELETE",
                    headers: {
                    "Content-Type": "application/json",
                    },
                    body: JSON.stringify(data),
                });

                const result = await response.json()
                if(result.status === "success"){
                    Swal.fire(
                        'Canceled!',
                        result.msg,
                        'success'
                        )
                    setTimeout(() => {
                        location.reload()
                    }, 800);
                }else if(result.status == 'canceled'){
                    Toastify({
                    text: result.msg,
                    className: "info",
                    style: {
                        background: "linear-gradient(to right, #ff0000, #dd2a7f)",
                    }
                    }).showToast();
                    setTimeout(() => {
                        location.reload()
                    }, 400);
                }
                else{
                    Toastify({
                    text: result.msg,
                    className: "info",
                    style: {
                        background: "linear-gradient(to right, #ff0000, #dd2a7f)",
                    }
                    }).showToast();
                }
                
                } catch (error) {
                    Toastify({
                    text: error.message,
                    className: "info",
                    style: {
                        background: "linear-gradient(to right, #ff0000, #dd2a7f)",
                    }
                    }).showToast();
                }
            }
        })   
    }





</script>

<%- include('./includes/footer') %>